{"version":3,"sources":["theme.js","redux/StoreConstants.js","redux/reducers/MaterialReducer.js","redux/reducers/MeshReducer.js","redux/reducers/NodeReducer.js","constants.js","redux/reducers/ProductReducer.js","redux/reducers/RootReducer.js","redux/Store.js","components/DracoSelector/DracoSelector.js","components/DracoSelector/index.js","redux/actions/ProductActions.js","redux/actions/MaterialActions.js","components/MaterialSelector/MaterialSelector.js","components/MaterialSelector/index.js","redux/actions/MeshActions.js","components/MeshSelector/MeshSelector.js","components/MeshSelector/index.js","redux/actions/NodeActions.js","components/NodeSelector/NodeSelector.js","components/NodeSelector/index.js","components/ProductSelector/ProductSelector.js","components/ProductSelector/index.js","components/Loader/Loader.js","components/Loader/index.js","components/Viewer3D/libs/glsl/copy/shader.frag","components/Viewer3D/libs/glsl/common/shader.vert","components/Viewer3D/libs/CopyMaterial.js","components/Viewer3D/libs/Composer.js","components/Viewer3D/Viewer3DConstants.js","components/Viewer3D/libs/Lights.js","components/Viewer3D/Viewer3D.js","components/Viewer3D/index.js","components/Viewer3D/libs/Helpers.js","components/MaterialSettings/MaterialSettings.js","pages/Home.jsx","App.jsx","index.jsx","components/Loader/Loader.module.css","components/Viewer3D/Viewer3D.module.css"],"names":["appTheme","createMuiTheme","palette","primary","main","GET_PRODUCT_DATA_LIST","GET_CURRENT_PRODUCT_DATA","SET_CURRENT_PRODUCT_DATA","SET_CURRENT_NODE_DATA","SET_SELECTED_MESH_DATA","SET_CURRENT_MATERIAL_DATA","SELECTED_MESH_MATERIAL","CURRENT_DRACO_VERSION","initialState","currentMaterialData","selectedMeshMaterial","MaterialReducer","state","action","type","payload","selectedMeshData","MeshReducer","currentNodeData","NodeReducer","DRACO_VERSION_LIST","id","label","productDataList","currentProductData","productData","currentDracoVersion","ProductReducer","RootReducer","combineReducers","productStore","nodeStore","meshStore","materialStore","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","connect","DracoSelector","setCurrentDracoVersion","PropTypes","func","isRequired","data","dispatch","props","classes","options","map","p","value","FormControl","fullWidth","className","InputLabel","shrink","variant","Select","labelId","native","labelWidth","style","width","onChange","event","target","setSelectedMeshMaterial","root","display","useAvatarStyles","height","border","MaterialSelector","setCurrentMaterialData","path","fetch","then","response","json","classesAvatar","useEffect","Grid","item","Typography","candidateMaterials","materialData","IconButton","size","color","name","onClick","Avatar","alt","title","src","thumbnail","setSelectedMeshData","MeshSelector","candidateMeshes","n","setValue","useState","forEach","nodeId","meshId","newData","push","setCurrentNodeData","NodeSelector","nodes","find","ProductSelector","getCurrentProductData","getProductDataList","setCurrentProductData","length","Loader","Loader3D","styles","loader","spinner","viewBox","cx","cy","r","fill","strokeWidth","CopyMaterial","ShaderMaterial","constructor","super","uniforms","inputBuffer","Uniform","opacity","fragmentShader","vertexShader","blending","NoBlending","depthWrite","depthTest","this","toneMapped","Composer","renderer","scene","camera","smaaSearchImage","smaaAreaImage","composer","EffectComposer","frameBufferType","HalfFloatType","renderPass","RenderPass","addPass","vignetteEffect","VignetteEffect","eskil","offset","darkness","brightnessContrastEffect","BrightnessContrastEffect","contrast","brightness","gammaCorrectionEffect","GammaCorrectionEffect","gamma","smaaEffect","SMAAEffect","SMAAPreset","HIGH","EdgeDetectionMode","COLOR","edgeDetectionMaterial","setEdgeDetectionThreshold","setPredicationMode","PredicationMode","DEPTH","setPredicationThreshold","setPredicationScale","edgesTextureEffect","TextureEffect","blendFunction","BlendFunction","SKIP","texture","renderTargetEdges","weightsTextureEffect","renderTargetWeights","bloomEffect","BloomEffect","SCREEN","kernelSize","KernelSize","MEDIUM","luminanceThreshold","luminanceSmoothing","intensity","resolutionScale","hueSaturationEffect","HueSaturationEffect","hue","saturation","normalPass","NormalPass","depthDownsamplingPass","DepthDownsamplingPass","normalBuffer","normalDepthBuffer","capabilities","isWebGL2","ssaoEffect","SSAOEffect","MULTIPLY","distanceScaling","depthAwareUpsampling","samples","rings","distanceThreshold","distanceFalloff","rangeThreshold","rangeFalloff","luminanceInfluence","minRadiusScale","radius","bias","fade","copyPass","ShaderPass","effectPass","EffectPass","console","log","enabled","renderToScreen","SPACE_SIZE","Lights","lightGroup","THREE","hemisphereLight","add","dirLight","position","set","castShadow","shadow","mapSize","near","far","spotLight","penumbra","decay","distance","g_model_root","g_scene","g_camera","g_camera_controller","g_render","g_render_scene","g_selected_node","g_gltf_loader","g_texture_loader","g_rgbe_loader","g_is_load_model","Viewer3D","canvasContainer","useRef","showLoader","setShowLoader","setNodeMaterial","node","material","load","uvScale","repeat","u","v","wrapS","wrapT","normalMap","normalScale","x","y","bumpMap","bumpScale","displacementMap","displacementScale","displacementBias","roughnessMap","roughness","metalnessMap","metalness","alphaMap","aoMap","aoMapIntensity","emissiveMap","emissiveIntensity","emissive","envMapIntensity","wireframe","transparent","needsUpdate","children","child","current","offsetWidth","offsetHeight","renderRequested","clock","rayCaster","intersects","background","lighter","shadowPlane","geometry","rotateX","Math","PI","groundMesh","receiveShadow","ShadowPlane","render","canvasWidth","domElement","canvasHeight","aspect","updateProjectionMatrix","setSize","requestRenderIfNotRequested","resizeRendererToDisplaySize","cameraController","update","getDelta","requestAnimationFrame","lookAt","powerPreference","antialias","stencil","depth","setPixelRatio","window","devicePixelRatio","shadowMap","appendChild","addEventListener","pickedPoint","offsetX","offsetY","setFromCamera","intersectObjects","document","body","cursor","changedTouches","pageX","pageY","OrbitControls","minAzimuthAngle","maxAzimuthAngle","dampingFactor","screenSpacePanning","minPolarAngle","maxPolarAngle","enableDamping","enableZoom","enablePan","gltfLoadingManager","onStart","url","itemsLoaded","itemsTotal","onProgress","onLoad","object","controls","boundingBox","setFromObject","center","getCenter","getSize","maxDim","max","z","cameraZ","abs","minZ","min","cameraToFarEdge","maxDistance","FitCameraToSelection","setTimeout","gLTFLoader","GLTFLoader","dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","textureLoader","POSTPROCESSING","search","area","RGBELoader","removeEventListener","innerHTML","setDataType","envMap","pg","PMREMGenerator","compileEquirectangularShader","fromEquirectangular","environment","dispose","remove","gltf","gltfMeshes","traverse","pivot","gltfMesh","mesh","visible","defaultMesh","meshData","defaultMaterial","async","fetchMaterialData","d","if","ref","animationFrameReq","useSelector","useDispatch","scale","setScale","setNormalScale","values","setValues","handleControlChange","e","newValue","doUpdate","dataset","handleInputChange","cancelAnimationFrame","stepSize","Paper","Box","mt","mb","justifyContent","step","Divider","disabled","alignItems","Switch","inputProps","checked","Home","StyledPaper","MaterialSettingHolder","MaterialSettings","MaterialSelectHolder","styled","div","App","_jsx","_Fragment","Provider","PersistGate","loading","ThemeProvider","BrowserRouter","Route","exact","component","ReactDOM","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7692f201.chunk.js","sourcesContent":["import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\"\n\nconst appTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#b9151b\"\n    }\n  }\n})\nexport default appTheme\n","export const GET_PRODUCT_DATA_LIST = \"GET_PROCUT_LIST\"\nexport const GET_CURRENT_PRODUCT_DATA = \"GET_CURRENT_PRODUCT_DATA\"\nexport const SET_CURRENT_PRODUCT_DATA = \"SET_CURRENT_PRODUCT_DATA\"\n\nexport const SET_CURRENT_NODE_DATA = \"SET_CURRENT_NODE_DATA\"\n\nexport const SET_SELECTED_MESH_DATA = \"SET_SELECTED_MESH_DATA\"\n\nexport const SET_CURRENT_MATERIAL_DATA = \"SET_CURRENT_MATERIAL_DATA\"\nexport const SELECTED_MESH_MATERIAL = \"SELECTED_MESH_MATERIAL\"\n\nexport const CURRENT_DRACO_VERSION = \"CURRENT_DRACO_VERSION\"\n","import {\n  SELECTED_MESH_MATERIAL,\n  SET_CURRENT_MATERIAL_DATA\n} from \"../StoreConstants\"\n\nconst initialState = {\n  currentMaterialData: null,\n  selectedMeshMaterial: null\n}\n\nconst MaterialReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_MATERIAL_DATA:\n      return {\n        ...state,\n        currentMaterialData: action.payload\n      }\n    case SELECTED_MESH_MATERIAL:\n      return {\n        ...state,\n        selectedMeshMaterial: action.payload\n      }\n    default: {\n      return {\n        ...state\n      }\n    }\n  }\n}\n\nexport default MaterialReducer\n","import {SET_SELECTED_MESH_DATA} from \"../StoreConstants\"\n\nconst initialState = {\n  selectedMeshData: []\n}\n\nconst MeshReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SELECTED_MESH_DATA:\n      return {\n        ...state,\n        selectedMeshData: [...action.payload]\n      }\n    default: {\n      return {\n        ...state\n      }\n    }\n  }\n}\n\nexport default MeshReducer\n","import {SET_CURRENT_NODE_DATA} from \"../StoreConstants\"\n\nconst initialState = {\n  currentNodeData: null\n}\n\nconst NodeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_NODE_DATA:\n      return {\n        ...state,\n        currentNodeData: action.payload\n      }\n    default: {\n      return {\n        ...state\n      }\n    }\n  }\n}\n\nexport default NodeReducer\n","export const ROUTE_HOMEPAGE = \"/\"\nexport const DRACO_VERSION_LIST = [\n  {id: \"model\", label: \"No compression version\"},\n  {id: \"dracoModel0\", label: \"Compression0 version\"},\n  {id: \"dracoModel1\", label: \"Compression1 version\"},\n  {id: \"dracoModel3\", label: \"Compression3 version\"},\n  {id: \"dracoModel6\", label: \"Compression6 version\"}\n]\n","import {DRACO_VERSION_LIST} from \"../../constants\"\nimport {\n  CURRENT_DRACO_VERSION,\n  GET_CURRENT_PRODUCT_DATA,\n  GET_PRODUCT_DATA_LIST,\n  SET_CURRENT_PRODUCT_DATA\n} from \"../StoreConstants\"\n\nconst initialState = {\n  productDataList: [],\n  currentProductData: null,\n  productData: null,\n  currentDracoVersion: DRACO_VERSION_LIST[0].id\n}\n\nconst ProductReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CURRENT_PRODUCT_DATA:\n      return {\n        ...state,\n        productData: action.payload\n      }\n    case GET_PRODUCT_DATA_LIST:\n      return {\n        ...state,\n        productDataList: [...action.payload]\n      }\n    case SET_CURRENT_PRODUCT_DATA:\n      return {\n        ...state,\n        currentProductData: action.payload\n      }\n    case CURRENT_DRACO_VERSION:\n      return {\n        ...state,\n        currentDracoVersion: action.payload\n      }\n    default: {\n      return {\n        ...state\n      }\n    }\n  }\n}\n\nexport default ProductReducer\n","import {combineReducers} from \"redux\"\nimport MaterialReducer from \"./MaterialReducer\"\nimport MeshReducer from \"./MeshReducer\"\nimport NodeReducer from \"./NodeReducer\"\nimport ProductReducer from \"./ProductReducer\"\n\nconst RootReducer = combineReducers({\n  productStore: ProductReducer,\n  nodeStore: NodeReducer,\n  meshStore: MeshReducer,\n  materialStore: MaterialReducer\n})\n\nexport default RootReducer\n","import {createStore, applyMiddleware} from \"redux\"\nimport {persistStore, persistReducer} from \"redux-persist\"\nimport {composeWithDevTools} from \"redux-devtools-extension\"\nimport thunk from \"redux-thunk\"\nimport RootReducer from \"./reducers/RootReducer\"\nimport storage from \"redux-persist/lib/storage\" // defaults to localStorage for web\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"root\"]\n}\n\nconst persistedReducer = persistReducer(persistConfig, RootReducer)\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\nconst persistor = persistStore(store)\n\nexport {persistor, store}\n","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport {FormControl, InputLabel, Select} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {setCurrentDracoVersion} from \"../../redux/actions/ProductActions\"\nimport {DRACO_VERSION_LIST} from \"../../constants\"\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}))\n\nconst DracoSelector = props => {\n  const classes = useStyles()\n  const {productStore, setCurrentDracoVersion} = props\n  const options = DRACO_VERSION_LIST.map(p => {\n    return (\n      <option key={p.id} value={p.id}>\n        {p.label}\n      </option>\n    )\n  })\n\n  return (\n    <FormControl fullWidth className={classes.formControl}>\n      <InputLabel shrink variant=\"outlined\" id=\"draco-selector\">\n        Select a compression version\n      </InputLabel>\n      <Select\n        labelId=\"draco-selector\"\n        native\n        labelWidth={50}\n        label=\"\"\n        variant=\"outlined\"\n        style={{\n          width: 300\n        }}\n        value={productStore.currentDracoVersion}\n        onChange={event => {\n          setCurrentDracoVersion(event.target.value)\n        }}\n      >\n        {options}\n      </Select>\n    </FormControl>\n  )\n}\n\nconst mapStateToProps = state => ({\n  productStore: state.productStore,\n  setCurrentDracoVersion: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {\n  setCurrentDracoVersion\n})(DracoSelector)\n","import DracoSelector from \"./DracoSelector\"\n\nexport default DracoSelector\n","import {\n  CURRENT_DRACO_VERSION,\n  GET_CURRENT_PRODUCT_DATA,\n  GET_PRODUCT_DATA_LIST,\n  SET_CURRENT_PRODUCT_DATA\n} from \"../StoreConstants\"\n\nexport function getCurrentProductData(path) {\n  return dispatch => {\n    if (path) {\n      fetch(path)\n        .then(response => response.json())\n        .then(data => {\n          dispatch({\n            type: GET_CURRENT_PRODUCT_DATA,\n            payload: data\n          })\n        })\n    } else {\n      dispatch({\n        type: GET_CURRENT_PRODUCT_DATA,\n        payload: null\n      })\n    }\n  }\n}\n\nexport function getProductDataList() {\n  return dispatch => {\n    fetch(\"/products/products.json\")\n      .then(response => response.json())\n      .then(data => {\n        dispatch({\n          type: GET_PRODUCT_DATA_LIST,\n          payload: data\n        })\n\n        if(data.length > 0) {\n          dispatch({\n            type: SET_CURRENT_PRODUCT_DATA,\n            payload: data[0]\n          })      \n        }\n        \n      })\n  }\n}\n\nexport function setCurrentProductData(data) {\n  return dispatch => {\n    dispatch({\n      type: SET_CURRENT_PRODUCT_DATA,\n      payload: data\n    })\n  }\n}\n\nexport function setCurrentDracoVersion(data) {\n  return dispatch => {\n    dispatch({\n      type: CURRENT_DRACO_VERSION,\n      payload: data\n    })\n  }\n}\n","import {\n  SELECTED_MESH_MATERIAL,\n  SET_CURRENT_MATERIAL_DATA\n} from \"../StoreConstants\"\n\nexport function setCurrentMaterialData(path) {\n  return dispatch => {\n    if (path) {\n      fetch(path)\n        .then(response => response.json())\n        .then(data => {\n          dispatch({\n            type: SET_CURRENT_MATERIAL_DATA,\n            payload: data\n          })\n        })\n    } else {\n      dispatch({\n        type: SET_CURRENT_MATERIAL_DATA,\n        payload: null\n      })\n    }\n  }\n}\n\nexport function setSelectedMeshMaterial(data) {\n  return dispatch => {\n    dispatch({\n      type: SELECTED_MESH_MATERIAL,\n      payload: data\n    })\n  }\n}\n","import React, {useEffect} from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport {Grid, IconButton, Avatar, Typography} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {\n  setCurrentMaterialData,\n  setSelectedMeshMaterial\n} from \"../../redux/actions/MaterialActions\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  }\n}))\n\nconst useAvatarStyles = makeStyles(theme => ({\n  root: {\n    width: 60,\n    height: 60,\n    border: \"3px solid\"\n  }\n}))\n\nconst MaterialSelector = props => {\n  const classes = useStyles()\n  const classesAvatar = useAvatarStyles()\n\n  const {\n    materialStore,\n    meshStore,\n    nodeStore,\n    productStore,\n    setCurrentMaterialData,\n    setSelectedMeshMaterial\n  } = props\n\n  useEffect(() => {\n    setCurrentMaterialData(null)\n  }, [nodeStore.currentNodeData])\n\n  return (\n    <>\n      <Grid item className={classes.root}>\n        {nodeStore.currentNodeData ? (\n          <Typography variant=\"h4\">Choose a material</Typography>\n        ) : (\n          <></>\n        )}\n      </Grid>\n      <Grid item className={classes.root}>\n        {nodeStore.currentNodeData?.candidateMaterials.map(materialData => {\n          return (\n            <IconButton\n              key={materialData.name}\n              size=\"small\"\n              color={\n                materialStore.selectedMeshMaterial === materialData.name\n                  ? \"primary\"\n                  : \"default\"\n              }\n              onClick={() => {\n                if (materialStore.selectedMeshMaterial !== materialData.name) {\n                  setSelectedMeshMaterial(materialData.name)\n                  setCurrentMaterialData(materialData.path)\n                }\n              }}\n            >\n              <Avatar\n                alt={materialData.name}\n                title={materialData.name}\n                src={materialData.thumbnail}\n                classes={classesAvatar}\n              />\n            </IconButton>\n          )\n        })}\n      </Grid>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  materialStore: state.materialStore,\n  meshStore: state.meshStore,\n  nodeStore: state.nodeStore,\n  productStore: state.productStore,\n  setCurrentMaterialData: PropTypes.func.isRequired,\n  setSelectedMeshMaterial: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {\n  setCurrentMaterialData,\n  setSelectedMeshMaterial\n})(MaterialSelector)\n","import MaterialSelector from \"./MaterialSelector\"\n\nexport default MaterialSelector\n","import {SET_SELECTED_MESH_DATA} from \"../StoreConstants\"\n\nexport function setSelectedMeshData(data) {\n  return dispatch => {\n    dispatch({\n      type: SET_SELECTED_MESH_DATA,\n      payload: data\n    })\n  }\n}\n","import React, {useEffect, useState} from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport {FormControl, InputLabel, Select} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {setSelectedMeshData} from \"../../redux/actions/MeshActions\"\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}))\n\nconst MeshSelector = props => {\n  const classes = useStyles()\n  const {meshStore, nodeStore, productStore, setSelectedMeshData} = props\n  let options = nodeStore.currentNodeData?.candidateMeshes.map(n => {\n    return (\n      <option key={n.id} value={n.id}>\n        {n.label}\n      </option>\n    )\n  })\n\n  const [value, setValue] = useState(\"\")\n\n  useEffect(() => {\n    if (nodeStore.currentNodeData && meshStore.selectedMeshData) {\n      meshStore.selectedMeshData.forEach(data => {\n        if (data.nodeId === nodeStore.currentNodeData.id) {\n          setValue(data.meshId)\n        }\n      })\n    }\n  }, [nodeStore.currentNodeData, meshStore.selectedMeshData])\n\n  return (\n    nodeStore.currentNodeData && (\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel shrink variant=\"outlined\" id=\"mesh-selector\">\n          Select a mesh\n        </InputLabel>\n        <Select\n          labelId=\"mesh-selector\"\n          native\n          labelWidth={50}\n          label=\"Select node\"\n          variant=\"outlined\"\n          style={{\n            width: 300\n          }}\n          value={value}\n          onChange={event => {\n            if (nodeStore.currentNodeData && meshStore.selectedMeshData) {\n              const newData = []\n              meshStore.selectedMeshData.forEach(data => {\n                if (data.nodeId === nodeStore.currentNodeData.id) {\n                  data.meshId = event.target.value\n                }\n                newData.push(data)\n              })\n              setSelectedMeshData(newData)\n            }\n          }}\n        >\n          {options}\n        </Select>\n      </FormControl>\n    )\n  )\n}\n\nconst mapStateToProps = state => ({\n  meshStore: state.meshStore,\n  nodeStore: state.nodeStore,\n  productStore: state.productStore,\n  setSelectedMeshData: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {setSelectedMeshData})(MeshSelector)\n","import MeshSelector from \"./MeshSelector\"\n\nexport default MeshSelector\n","import {SET_CURRENT_NODE_DATA} from \"../StoreConstants\"\n\nexport function setCurrentNodeData(data) {\n  return dispatch => {\n    dispatch({\n      type: SET_CURRENT_NODE_DATA,\n      payload: data\n    })\n  }\n}\n","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport {FormControl, InputLabel, Select} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {setCurrentNodeData} from \"../../redux/actions/NodeActions\"\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}))\n\nconst NodeSelector = props => {\n  const classes = useStyles()\n  const {nodeStore, productStore, setCurrentNodeData} = props\n  let options = productStore.productData?.nodes.map(n => {\n    return (\n      <option key={n.id} value={n.id}>\n        {n.label}\n      </option>\n    )\n  })\n\n  return (\n    <FormControl fullWidth className={classes.formControl}>\n      <InputLabel shrink variant=\"outlined\" id=\"node-selector\">\n        Select a node\n      </InputLabel>\n      <Select\n        labelId=\"node-selector\"\n        native\n        labelWidth={50}\n        label=\"Select node\"\n        variant=\"outlined\"\n        style={{\n          width: 300\n        }}\n        value={nodeStore.currentNodeData?.id ?? \"none\"}\n        onChange={event => {\n          if (productStore.productData) {\n            if (event.target.value !== \"none\") {\n              setCurrentNodeData(\n                productStore.productData.nodes.find(\n                  n => n.id === event.target.value\n                )\n              )\n            } else {\n              setCurrentNodeData(null)\n            }\n          } else {\n            setCurrentNodeData(null)\n          }\n        }}\n      >\n        <option value=\"none\">None</option>\n        {options}\n      </Select>\n    </FormControl>\n  )\n}\n\nconst mapStateToProps = state => ({\n  nodeStore: state.nodeStore,\n  productStore: state.productStore,\n  setCurrentNodeData: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {setCurrentNodeData})(NodeSelector)\n","import NodeSelector from \"./NodeSelector\"\n\nexport default NodeSelector\n","import React, {useEffect} from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport {FormControl, InputLabel, Select} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {\n  getCurrentProductData,\n  getProductDataList,\n  setCurrentProductData\n} from \"../../redux/actions/ProductActions\"\nimport {setCurrentNodeData} from \"../../redux/actions/NodeActions\"\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}))\n\nconst ProductSelector = props => {\n  const classes = useStyles()\n\n  const {\n    productStore,\n    getCurrentProductData,\n    getProductDataList,\n    setCurrentProductData,\n    setCurrentNodeData\n  } = props\n\n  const options = productStore.productDataList.map(p => {\n    return (\n      <option key={p.id} value={p.id}>\n        {p.label}\n      </option>\n    )\n  })\n\n  useEffect(() => {\n    if (productStore.currentProductData) {\n      getCurrentProductData(productStore.currentProductData.path)\n    } else {\n      getCurrentProductData(null)\n    }\n\n    //Reset node\n    setCurrentNodeData(null)\n  }, [productStore.currentProductData])\n\n  useEffect(() => {\n    getProductDataList()\n  }, [])\n\n  return (\n    <FormControl fullWidth className={classes.formControl}>\n      <InputLabel shrink variant=\"outlined\" id=\"product-selector\">\n        Select product\n      </InputLabel>\n      <Select\n        labelId=\"product-selector\"\n        native\n        labelWidth={50}\n        label=\"Select product\"\n        variant=\"outlined\"\n        style={{\n          width: 300\n        }}\n        value={productStore.currentProductData?.id ?? \"\"}\n        onChange={event => {\n          setCurrentProductData(\n            productStore.productDataList.find(p => p.id === event.target.value)\n          )\n        }}\n      >\n        <option value=\"\">None</option>\n        {options}\n      </Select>\n    </FormControl>\n  )\n}\n\nconst mapStateToProps = state => ({\n  productStore: state.productStore,\n  getCurrentProductData: PropTypes.func.isRequired,\n  getProductDataList: PropTypes.func.isRequired,\n  setCurrentProductData: PropTypes.func.isRequired,\n  setCurrentNodeData: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {\n  getCurrentProductData,\n  getProductDataList,\n  setCurrentProductData,\n  setCurrentNodeData\n})(ProductSelector)\n","import ProductSelector from \"./ProductSelector\"\n\nexport default ProductSelector\n","import React from \"react\"\n\nimport styles from \"./Loader.module.css\"\n\nconst Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <svg className={styles.spinner} viewBox=\"0 0 50 50\">\n        <circle\n          className={styles.path}\n          cx=\"25\"\n          cy=\"25\"\n          r=\"20\"\n          fill=\"none\"\n          strokeWidth=\"5\"\n        ></circle>\n      </svg>\n    </div>\n  )\n}\n\nexport default Loader\n","import Loader3D from \"./Loader\"\n\nexport default Loader3D\n","export default __webpack_public_path__ + \"static/media/shader.d622c730.frag\";","export default __webpack_public_path__ + \"static/media/shader.00bfe510.vert\";","import {NoBlending, ShaderMaterial, Uniform} from \"three\"\n\nimport fragmentShader from \"./glsl/copy/shader.frag\"\nimport vertexShader from \"./glsl/common/shader.vert\"\n\n/**\n * A simple copy shader material.\n */\n\nexport class CopyMaterial extends ShaderMaterial {\n  /**\n   * Constructs a new copy material.\n   */\n\n  constructor() {\n    super({\n      type: \"CopyMaterial\",\n\n      uniforms: {\n        inputBuffer: new Uniform(null),\n        opacity: new Uniform(1.0)\n      },\n\n      fragmentShader,\n      vertexShader,\n\n      blending: NoBlending,\n      depthWrite: false,\n      depthTest: false\n    })\n\n    /** @ignore */\n    this.toneMapped = false\n  }\n}\n","import {\n  EffectComposer,\n  RenderPass,\n  VignetteEffect,\n  BrightnessContrastEffect,\n  GammaCorrectionEffect,\n  SMAAEffect,\n  BloomEffect,\n  HueSaturationEffect,\n  NormalPass,\n  DepthDownsamplingPass,\n  SSAOEffect,\n  TextureEffect,\n  EffectPass,\n  SMAAPreset,\n  EdgeDetectionMode,\n  BlendFunction,\n  KernelSize,\n  PredicationMode,\n  ShaderPass\n} from \"postprocessing\"\n\nimport {CopyMaterial} from \"./CopyMaterial\"\n\nimport {FloatType, HalfFloatType} from \"three\"\n\nfunction Composer(renderer, scene, camera, smaaSearchImage, smaaAreaImage) {\n  const composer = new EffectComposer(renderer, {\n    frameBufferType: HalfFloatType\n  })\n  const renderPass = new RenderPass(scene, camera)\n  composer.addPass(renderPass)\n  const vignetteEffect = new VignetteEffect({\n    eskil: false,\n    offset: 0.1,\n    darkness: 0.5\n  })\n  const brightnessContrastEffect = new BrightnessContrastEffect({\n    contrast: 0.05,\n    brightness: 0.0\n  })\n  const gammaCorrectionEffect = new GammaCorrectionEffect({\n    gamma: 1.6\n  })\n\n  const smaaEffect = new SMAAEffect(\n    smaaSearchImage,\n    smaaAreaImage,\n    SMAAPreset.HIGH,\n    EdgeDetectionMode.COLOR\n  )\n  smaaEffect.edgeDetectionMaterial.setEdgeDetectionThreshold(0.05)\n  smaaEffect.edgeDetectionMaterial.setPredicationMode(PredicationMode.DEPTH)\n  smaaEffect.edgeDetectionMaterial.setPredicationThreshold(0.002)\n  smaaEffect.edgeDetectionMaterial.setPredicationScale(1.0)\n\n  const edgesTextureEffect = new TextureEffect({\n    blendFunction: BlendFunction.SKIP,\n    texture: smaaEffect.renderTargetEdges.texture\n  })\n\n  const weightsTextureEffect = new TextureEffect({\n    blendFunction: BlendFunction.SKIP,\n    texture: smaaEffect.renderTargetWeights.texture\n  })\n\n  const bloomEffect = new BloomEffect({\n    blendFunction: BlendFunction.SCREEN,\n    kernelSize: KernelSize.MEDIUM,\n    luminanceThreshold: 0.3,\n    luminanceSmoothing: 0.83,\n    height: 1024,\n    intensity: 0.5,\n    resolutionScale: 0.5\n  })\n\n  const hueSaturationEffect = new HueSaturationEffect({\n    hue: 0.0,\n    saturation: 0.191\n  })\n\n  const normalPass = new NormalPass(scene, camera)\n  const depthDownsamplingPass = new DepthDownsamplingPass({\n    normalBuffer: normalPass.texture,\n    resolutionScale: 0.5\n  })\n  const normalDepthBuffer = renderer.capabilities.isWebGL2\n    ? depthDownsamplingPass.texture\n    : null\n\n  // Note: Thresholds and falloff correspond to camera near/far.\n  // Example: worldDistance = distanceThreshold * (camera.far - camera.near)\n  const ssaoEffect = new SSAOEffect(camera, normalPass.texture, {\n    blendFunction: BlendFunction.MULTIPLY,\n    distanceScaling: true,\n    depthAwareUpsampling: true,\n    normalDepthBuffer,\n    samples: 9,\n    rings: 7,\n    distanceThreshold: 0.02, // Render up to a distance of ~20 world units\n    distanceFalloff: 0.0025, // with an additional ~2.5 units of falloff.\n    rangeThreshold: 0.0003, // Occlusion proximity of ~0.3 world units\n    rangeFalloff: 0.0001, // with ~0.1 units of falloff.\n    luminanceInfluence: 0.7,\n    minRadiusScale: 0.33,\n    radius: 0.1,\n    intensity: 1.33,\n    bias: 0.025,\n    fade: 0.01,\n    color: null,\n    resolutionScale: 1\n  })\n\n  const copyPass = new ShaderPass(new CopyMaterial())\n\n  const effectPass = new EffectPass(\n    camera,\n    bloomEffect,\n    smaaEffect,\n    edgesTextureEffect,\n    weightsTextureEffect,\n    ssaoEffect,\n    vignetteEffect,\n    brightnessContrastEffect,\n    gammaCorrectionEffect,\n    hueSaturationEffect\n  )\n\n  composer.addPass(normalPass)\n  if (renderer.capabilities.isWebGL2) {\n    composer.addPass(depthDownsamplingPass)\n  } else {\n    console.log(\n      \"WebGL 2 not supported, falling back to naive depth downsampling\"\n    )\n  }\n\n  copyPass.enabled = false\n  copyPass.renderToScreen = true\n  effectPass.renderToScreen = true\n\n  composer.addPass(copyPass)\n  composer.addPass(effectPass)\n\n  return composer\n}\n\nexport default Composer\n","export const SPACE_SIZE = 10\n","import * as THREE from \"three\"\nimport {SPACE_SIZE} from \"../Viewer3DConstants\"\n\nfunction Lights() {\n  const lightGroup = new THREE.Group()\n  lightGroup.name = \"LightGroup\"\n\n  const skyColor = \"#bfe5f9\"\n  const groundColor = \"#ddbba0\"\n  const hemisphereLight = new THREE.HemisphereLight(skyColor, groundColor, 1.5)\n  lightGroup.add(hemisphereLight)\n\n  const dirLight = new THREE.DirectionalLight(0xffffff, 1.5)\n  dirLight.position.set(SPACE_SIZE * 0.05, SPACE_SIZE, SPACE_SIZE * 0.1)\n  dirLight.target.position.set(0, 0, 0)\n  dirLight.castShadow = true\n  dirLight.shadow.mapSize.width = 1024\n  dirLight.shadow.mapSize.height = 1024\n  dirLight.shadow.camera.near = 0.01\n  dirLight.shadow.camera.far = SPACE_SIZE * 2\n  lightGroup.add(dirLight)\n\n  // const cameraHelper = new THREE.CameraHelper(dirLight.shadow.camera)\n  // lightGroup.add(cameraHelper)\n\n  // const lightHelper = new THREE.DirectionalLightHelper(dirLight)\n  // lightGroup.add(lightHelper)\n\n  const spotLight = new THREE.SpotLight(0xd2fcc0, 1)\n  spotLight.position.set(-SPACE_SIZE, SPACE_SIZE, -SPACE_SIZE)\n  spotLight.target.position.set(0, 0, 0)\n  spotLight.penumbra = 0.1\n  spotLight.decay = 2\n  spotLight.distance = SPACE_SIZE * 2\n  lightGroup.add(spotLight)\n\n  return lightGroup\n}\n\nexport default Lights\n","import {useEffect, useRef, useState} from \"react\"\nimport {connect} from \"react-redux\"\nimport {PropTypes} from \"prop-types\"\nimport ToggleDisplay from \"react-toggle-display\"\nimport * as THREE from \"three\"\nimport * as POSTPROCESSING from \"postprocessing\"\nimport {RGBELoader} from \"three/examples/jsm/loaders/RGBELoader\"\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\"\nimport {DRACOLoader} from \"three/examples/jsm/loaders/DRACOLoader\"\nimport {PMREMGenerator} from \"three/src/extras/PMREMGenerator\"\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\"\nimport Loader from \"../Loader\"\nimport styles from \"./Viewer3D.module.css\"\nimport Composer from \"./libs/Composer\"\nimport Lights from \"./libs/Lights\"\nimport {FitCameraToSelection, ShadowPlane} from \"./libs/Helpers\"\nimport {SPACE_SIZE} from \"./Viewer3DConstants\"\nimport {setSelectedMeshData} from \"../../redux/actions/MeshActions\"\nimport {setSelectedMeshMaterial} from \"../../redux/actions/MaterialActions\"\nimport {setCurrentNodeData} from \"../../redux/actions/NodeActions\"\n\nlet g_model_root\nlet g_scene\nlet g_camera\nlet g_camera_controller\nlet g_render\nlet g_render_scene\nlet g_selected_node\nlet g_gltf_loader\nlet g_texture_loader\nlet g_rgbe_loader\nlet g_is_load_model = false\n\nfunction Viewer3D(props) {\n  const {\n    materialStore,\n    meshStore,\n    nodeStore,\n    productStore,\n    setSelectedMeshData,\n    setSelectedMeshMaterial,\n    setCurrentNodeData\n  } = props\n  const canvasContainer = useRef(null)\n  const [showLoader, setShowLoader] = useState(true)\n\n  function setNodeMaterial(node, materialData) {\n    if (node && materialData) {\n      node.material.name = materialData.name\n\n      \n      if (materialData.color === \"\") {\n        node.material.color.set(null)\n      } else {\n        node.material.color.set(materialData.color)\n      }\n\n      \n      if (materialData.map === \"\") {\n        node.material.map = null\n      } else {\n        const texture = g_texture_loader.load(materialData.map)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.map = texture\n      }\n\n      \n      if (materialData.normalMap === \"\") {\n        node.material.normalMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.normalMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.normalMap = texture\n\n        node.material.normalScale = new THREE.Vector2(\n          materialData.normalScale.x,\n          materialData.normalScale.y\n        )\n      }\n\n      \n      if (materialData.bumpMap === \"\") {\n        node.material.bumpMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.bumpMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.bumpMap = texture\n\n        node.material.bumpScale = materialData.bumpScale\n      }\n\n      \n      if (materialData.displacementMap === \"\") {\n        node.material.displacementMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.displacementMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.displacementMap = texture\n\n        node.material.displacementScale = materialData.displacementScale\n        node.material.displacementBias = materialData.displacementBias\n      }\n\n      \n      if (materialData.roughnessMap === \"\") {\n        node.material.roughnessMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.roughnessMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.roughnessMap = texture\n      }\n\n      node.material.roughness = materialData.roughness\n\n      \n      if (materialData.metalnessMap !== \"\") {\n        node.material.metalnessMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.metalnessMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.metalnessMap = texture\n      }\n\n      node.material.metalness = materialData.metalness\n\n      \n      if (materialData.alphaMap === \"\") {\n        node.material.alphaMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.alphaMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.alphaMap = texture\n      }\n\n      node.material.opacity = materialData.opacity\n\n      \n      if (materialData.aoMap === \"\") {\n        node.material.aoMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.aoMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.aoMap = texture\n\n        node.material.aoMapIntensity = materialData.aoMapIntensity\n      }\n\n      \n      if (materialData.emissiveMap === \"\") {\n        node.material.emissiveMap = null\n      } else {\n        const texture = g_texture_loader.load(materialData.emissiveMap)\n        if (materialData.uvScale) {\n          texture.repeat.set(materialData.uvScale.u, materialData.uvScale.v)\n          texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        }\n        node.material.emissiveMap = texture\n\n        node.material.emissiveIntensity = materialData.emissiveIntensity\n      }\n      node.material.emissive.set(materialData.emissive)\n\n      \n      node.material.envMapIntensity = materialData.envMapIntensity\n\n      node.material.wireframe = materialData.wireframe\n      node.material.transparent = materialData.transparent\n      node.material.needsUpdate = true\n\n      \n      node.children.forEach(child => {\n        child.material = node.material\n      })\n    }\n  }\n\n  async function fetchMaterialData(path) {\n    const response = await fetch(path)\n    const data = await response.json()\n    return data\n  }\n\n  useEffect(() => {\n    let width = canvasContainer.current.offsetWidth\n    let height = canvasContainer.current.offsetHeight\n\n    let renderRequested = false\n\n    let smaaSearchImage = null\n    let smaaAreaImage = null\n\n    const clock = new THREE.Clock()\n\n    let composer = null\n\n    g_model_root = new THREE.Object3D()\n    g_model_root.name = \"ModelRoot\"\n\n    const rayCaster = new THREE.Raycaster()\n    const intersects = []\n\n    /**\n     * Scene\n     */\n    const scene = new THREE.Scene()\n    scene.background = new THREE.Color(\"#aeaeae\")\n    \n    g_scene = scene\n\n    scene.add(g_model_root)\n\n    /**\n     * Lighter\n     */\n    const lighter = Lights()\n    scene.add(lighter)\n\n    /**\n     * Helper\n     */\n    \n    \n\n    const shadowPlane = ShadowPlane()\n    scene.add(shadowPlane)\n    /**\n     * Camera\n     */\n    const camera = new THREE.PerspectiveCamera(\n      30,\n      width / height,\n      0.01,\n      SPACE_SIZE * 100\n    )\n    camera.position.set(-SPACE_SIZE * 0.2, SPACE_SIZE, SPACE_SIZE)\n    camera.lookAt(0, 0, 0)\n    g_camera = camera\n\n    /**\n     * Resize & Render\n     */\n    function resizeRendererToDisplaySize() {\n      const canvasWidth = renderer.domElement.offsetWidth\n      const canvasHeight = renderer.domElement.offsetHeight\n      const needResize = canvasWidth !== width || canvasHeight !== height\n      if (needResize) {\n        width = canvasWidth\n        height = canvasHeight\n        camera.aspect = width / height\n        camera.updateProjectionMatrix()\n        renderer.setSize(width, height)\n        composer.setSize(width, height)\n        requestRenderIfNotRequested()\n      }\n    }\n\n    function render() {\n      renderRequested = false\n      resizeRendererToDisplaySize()\n      cameraController.update()\n      renderer.render(scene, camera)\n      if (composer) composer.render(clock.getDelta())\n    }\n\n    function requestRenderIfNotRequested() {\n      if (!renderRequested) {\n        renderRequested = true\n        requestAnimationFrame(render)\n      }\n    }\n    g_render_scene = requestRenderIfNotRequested\n\n    /**\n     * Renderer\n     */\n    const renderer = new THREE.WebGLRenderer({\n      powerPreference: \"high-performance\",\n      antialias: false,\n      stencil: false,\n      depth: false\n    })\n    renderer.setSize(width, height, false)\n    renderer.setPixelRatio(window.devicePixelRatio || 1)\n    renderer.shadowMap.enabled = true\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap\n    g_render = renderer\n\n    canvasContainer.current.appendChild(renderer.domElement)\n\n    \n    function onMouseDown(event) {}\n    function onMouseUp(event) {\n      const pickedPoint = new THREE.Vector2(\n        (event.offsetX / width) * 2 - 1,\n        -(event.offsetY / height) * 2 + 1\n      )\n      rayCaster.setFromCamera(pickedPoint, camera)\n      let pickedObjs = rayCaster.intersectObjects(intersects)\n      if (pickedObjs.length > 0) {\n      }\n    }\n    function onMouseMove(event) {\n      const pickedPoint = new THREE.Vector2(\n        (event.offsetX / width) * 2 - 1,\n        -(event.offsetY / height) * 2 + 1\n      )\n\n      rayCaster.setFromCamera(pickedPoint, camera)\n      let pickedObjs = rayCaster.intersectObjects(intersects)\n      if (pickedObjs.length > 0) {\n        document.body.style.cursor = \"pointer\"\n      } else {\n        document.body.style.cursor = \"default\"\n      }\n    }\n\n    function onTouchStart(event) {}\n    function onTouchEnd(event) {\n      const pickedPoint = new THREE.Vector2(\n        (event.changedTouches[0].pageX / width) * 2 - 1,\n        -(event.changedTouches[0].pageY / height) * 2 + 1\n      )\n      rayCaster.setFromCamera(pickedPoint, camera)\n      let pickedObjs = rayCaster.intersectObjects(intersects)\n      if (pickedObjs.length > 0) {\n      }\n    }\n    function onTouchMove() {}\n\n    renderer.domElement.addEventListener(\"mousedown\", onMouseDown)\n    renderer.domElement.addEventListener(\"mouseup\", onMouseUp)\n    renderer.domElement.addEventListener(\"mousemove\", onMouseMove)\n\n    renderer.domElement.addEventListener(\"touchstart\", onTouchStart)\n    renderer.domElement.addEventListener(\"touchend\", onTouchEnd)\n    renderer.domElement.addEventListener(\"touchmove\", onTouchMove)\n\n    /**\n     * Camera Controller\n     */\n    const cameraController = new OrbitControls(camera, renderer.domElement)\n    cameraController.minAzimuthAngle = -180\n    cameraController.maxAzimuthAngle = 180\n    cameraController.dampingFactor = 0.05\n    cameraController.screenSpacePanning = true\n    \n    \n    \n    \n    cameraController.minPolarAngle = 1\n    cameraController.maxPolarAngle = Math.PI / 1.5\n    cameraController.enableDamping = true\n    cameraController.enableZoom = true\n    cameraController.enablePan = false\n    g_camera_controller = cameraController\n\n    /**\n     * Load Assets\n     */\n    const gltfLoadingManager = new THREE.LoadingManager()\n    gltfLoadingManager.onStart = (url, itemsLoaded, itemsTotal) => {\n      setShowLoader(true)\n    }\n    gltfLoadingManager.onProgress = (url, itemsLoaded, itemsTotal) => {\n      if (!showLoader) {\n        setShowLoader(true)\n      }\n    }\n    gltfLoadingManager.onLoad = () => {\n      if (g_is_load_model) {\n        camera.position.set(-SPACE_SIZE * 0.2, SPACE_SIZE, SPACE_SIZE)\n        camera.lookAt(0, 0, 0)\n        FitCameraToSelection(camera, g_model_root, 6, cameraController)\n        g_is_load_model = false\n      }\n      requestRenderIfNotRequested()\n      setTimeout(() => {\n        setShowLoader(false)\n      }, 1200)\n    }\n    const gLTFLoader = new GLTFLoader(gltfLoadingManager)\n    g_gltf_loader = gLTFLoader\n\n    const dracoLoader = new DRACOLoader()\n    dracoLoader.setDecoderPath(\"/draco/\")\n    gLTFLoader.setDRACOLoader(dracoLoader)\n\n    const textureLoader = new THREE.TextureLoader(gltfLoadingManager)\n    g_texture_loader = textureLoader\n\n    \n    const smaaImageLoader = new POSTPROCESSING.SMAAImageLoader(\n      gltfLoadingManager\n    )\n    smaaImageLoader.load(([search, area]) => {\n      smaaSearchImage = search\n      smaaAreaImage = area\n      composer = Composer(\n        renderer,\n        scene,\n        camera,\n        smaaSearchImage,\n        smaaAreaImage\n      )\n    })\n\n    \n    g_rgbe_loader = new RGBELoader(gltfLoadingManager)\n\n    /**\n     * RenderEvent & Dispose\n     */\n    renderer.render(scene, camera)\n    cameraController.addEventListener(\"change\", requestRenderIfNotRequested)\n    window.addEventListener(\"resize\", requestRenderIfNotRequested)\n    return () => {\n      cameraController.removeEventListener(\n        \"change\",\n        requestRenderIfNotRequested\n      )\n      window.removeEventListener(\"resize\", requestRenderIfNotRequested)\n      if (canvasContainer.current) canvasContainer.current.innerHTML = \"\"\n    }\n  }, [])\n\n  useEffect(() => {\n    setCurrentNodeData(null)\n\n    \n    if (productStore.productData) {\n      g_rgbe_loader\n        .setDataType(THREE.UnsignedByteType)\n        .load(productStore.productData.envMap, texture => {\n          const pg = new PMREMGenerator(g_render)\n          pg.compileEquirectangularShader()\n          const envMap = pg.fromEquirectangular(texture).texture\n          g_scene.environment = envMap\n          \n          texture.dispose()\n          pg.dispose()\n        })\n    }\n\n    \n    g_model_root.children.forEach(node => {\n      node.children.forEach(child => {\n        child.geometry.dispose()\n        child.material.dispose()\n        node.remove(child)\n      })\n      g_model_root.remove(node)\n    })\n    g_model_root.children = []\n\n    \n    if (productStore.productData) {\n      g_is_load_model = true\n      g_gltf_loader.load(\n        productStore.productData[productStore.currentDracoVersion],\n        gltf => {\n          if (gltf.scene) {\n            \n            const gltfMeshes = []\n            gltf.scene.traverse(child => {\n              if (child.type === \"Mesh\") {\n                child.castShadow = true\n                gltfMeshes.push(child)\n              }\n            })\n\n            \n            productStore.productData.nodes.forEach(node => {\n              const pivot = new THREE.Object3D()\n              pivot.name = node.id\n              node.candidateMeshes.forEach(json => {\n                const gltfMesh = gltfMeshes.find(mesh => mesh.name === json.id)\n                if (gltfMesh) {\n                  gltfMesh.visible = gltfMesh.name === node.defaultMesh\n                  pivot.add(gltfMesh)\n                }\n              })\n              g_model_root.add(pivot)\n            })\n\n            \n            const meshData = []\n            productStore.productData.nodes.forEach(node => {\n              meshData.push({nodeId: node.id, meshId: node.defaultMesh})\n            })\n            setSelectedMeshData(meshData)\n\n            \n            g_model_root.children.forEach(child => {\n              const material = new THREE.MeshStandardMaterial({\n                color: \"#363636\"\n              })\n              material.envMap = g_scene.environment\n              child.material = material\n\n              const materialData = productStore.productData.nodes.find(\n                node => node.id === child.name\n              )?.defaultMaterial\n              fetchMaterialData(materialData?.path).then(data => {\n                setNodeMaterial(child, data)\n              })\n            })\n          }\n        }\n      )\n    }\n    g_render_scene()\n  }, [productStore.productData, productStore.currentDracoVersion])\n\n  useEffect(() => {\n    if (g_selected_node) {\n      \n      g_selected_node = null\n      setSelectedMeshMaterial(null)\n    }\n    g_model_root?.traverse(child => {\n      if (\n        child.type === \"Object3D\" &&\n        child.name === nodeStore.currentNodeData?.id\n      ) {\n        g_selected_node = child\n        setSelectedMeshMaterial(child.material.name)\n        \n        \n        \n        \n        \n        \n      }\n    })\n    g_render_scene()\n  }, [nodeStore.currentNodeData])\n\n  useEffect(() => {\n    if (g_selected_node && meshStore.selectedMeshData) {\n      const d = meshStore.selectedMeshData.find(\n        data => data.nodeId === g_selected_node.name\n      )\n      if (d) {\n        g_selected_node.children.forEach(child => {\n          child.visible = child.name === d.meshId\n        })\n      }\n    }\n\n    g_render_scene()\n  }, [meshStore.selectedMeshData])\n\n  useEffect(() => {\n    setNodeMaterial(g_selected_node, materialStore.currentMaterialData)\n  }, [materialStore.currentMaterialData])\n\n  return (\n    <>\n      <ToggleDisplay if={showLoader}>\n        <Loader />\n      </ToggleDisplay>\n      <div className={styles.canvasContainer} ref={canvasContainer}></div>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  materialStore: state.materialStore,\n  meshStore: state.meshStore,\n  nodeStore: state.nodeStore,\n  productStore: state.productStore,\n  setSelectedMeshData: PropTypes.func.isRequired,\n  setSelectedMeshMaterial: PropTypes.func.isRequired,\n  setCurrentNodeData: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {\n  setSelectedMeshData,\n  setSelectedMeshMaterial,\n  setCurrentNodeData\n})(Viewer3D)\n","import Viewer3D from \"./Viewer3D\"\n\nexport default Viewer3D\n","import * as THREE from \"three\"\nimport {SPACE_SIZE} from \"../Viewer3DConstants\"\n\nfunction ShadowPlane() {\n  const geometry = new THREE.PlaneGeometry(SPACE_SIZE, SPACE_SIZE)\n  geometry.rotateX(-Math.PI / 2)\n  const material = new THREE.ShadowMaterial()\n  material.opacity = 0.3\n  const groundMesh = new THREE.Mesh(geometry, material)\n  groundMesh.name = \"GroundMesh\"\n  groundMesh.position.y = 0\n  groundMesh.receiveShadow = true\n  return groundMesh\n}\n\nfunction FitCameraToSelection(camera, object, offset, controls) {\n  offset = offset || 1.25\n\n  const boundingBox = new THREE.Box3()\n\n  // get bounding box of object - this will be used to setup controls and camera\n  boundingBox.setFromObject(object)\n\n  const center = new THREE.Vector3()\n\n  boundingBox.getCenter(center)\n\n  const size = new THREE.Vector3()\n  boundingBox.getSize(size)\n\n  // get the max side of the bounding box (fits to width OR height as needed )\n  const maxDim = Math.max(size.x, size.y, size.z)\n\n  var cameraZ = Math.abs(maxDim / 4)\n\n  cameraZ *= offset // zoom out a little so that objects don't fill the screen\n\n  camera.position.z = cameraZ\n\n  const minZ = boundingBox.min.z\n  const cameraToFarEdge = minZ < 0 ? -minZ + cameraZ : cameraZ - minZ\n\n  camera.far = cameraToFarEdge * 3\n  camera.updateProjectionMatrix()\n\n  if (controls) {\n    // set camera to rotate around center of loaded object\n    controls.target = center\n    // prevent camera from zooming out far enough to create far plane cutoff\n    controls.maxDistance = cameraToFarEdge * 2\n  } else {\n    camera.lookAt(center)\n  }\n}\n\nexport {ShadowPlane, FitCameraToSelection}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport { SET_CURRENT_MATERIAL_DATA } from '../../redux/StoreConstants'\nimport { Box, Divider, Paper, Switch, Typography } from '@material-ui/core'\n\nlet animationFrameReq\n\nconst MaterialSelector = () => {\n  const { currentMaterialData } = useSelector(state => state['materialStore'])\n  const dispatch = useDispatch()\n\n  const [scale, setScale] = useState(1)\n  const [normalScale, setNormalScale] = useState(1)\n\n  const [values, setValues] = useState({})\n\n\n  useEffect(() => {\n    if (currentMaterialData) {\n      if (currentMaterialData?.uvScale?.u !== scale) {\n        setScale(currentMaterialData?.uvScale?.u)\n      }\n      if (currentMaterialData.normalScale.x !== normalScale) {\n        setNormalScale(currentMaterialData.normalScale.x)\n      }\n      setValues({\n        ...currentMaterialData\n      })\n    }\n  }, [currentMaterialData])\n\n\n  const handleScaleChange = (e) => {\n    setScale(e.target.value)\n    doUpdate({\n      ...currentMaterialData,\n      uvScale: {\n        u: e.target.value,\n        v: e.target.value\n      }\n    })\n  }\n\n  const handleNormalScaleChange = (e) => {\n    setNormalScale(e.target.value)\n    doUpdate({\n      ...currentMaterialData,\n      normalScale: {\n        x: e.target.value,\n        y: e.target.value\n      }\n    })\n  }\n\n  const handleControlChange = (e, newValue) => {\n    doUpdate({\n      ...currentMaterialData,\n      [e.target.dataset.key]: newValue\n    })\n  }\n\n  const handleInputChange = (e) => {\n    handleControlChange(e, e.target.value)\n  }\n\n  const doUpdate = (newData) => {\n    /*dispatch({\n      type: SET_CURRENT_MATERIAL_DATA,\n      payload: newData\n    })*/\n    cancelAnimationFrame(animationFrameReq)\n    animationFrameReq = requestAnimationFrame(() => {\n      dispatch({\n        type: SET_CURRENT_MATERIAL_DATA,\n        payload: newData\n      })\n    })\n  }\n\n  if (!currentMaterialData) {\n    return null\n  }\n\n  let stepSize = 0.001\n  if (values?.bumpScale > 0.01) {\n    stepSize = 0.01\n  }\n  if (values?.bumpScale > 0.5) {\n    stepSize = 0.1\n  }\n\n  return (\n    <>\n      <Paper>\n        <Box p={2}>\n\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>Textures Scale</Typography>\n            <input\n              value={scale}\n              type=\"number\"\n              min={0}\n              max={20}\n              step={0.1}\n              onChange={handleScaleChange} style={{ width: 50 }} />\n          </Box>\n\n          <Divider />\n\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>Normal Map Scale</Typography>\n            <input\n              value={normalScale}\n              disabled={values?.normalMap === ''}\n              type=\"number\"\n              data-key='displacementScale'\n              min={0}\n              max={20}\n              step={0.01}\n              onChange={handleNormalScaleChange} style={{ width: 50 }} />\n          </Box>\n\n          <Divider />\n\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>Bump map Scale</Typography>\n            <input\n              value={values?.bumpScale ?? 0}\n              disabled={currentMaterialData.bumpMap === ''}\n              type=\"number\"\n              data-key='bumpScale'\n              min={0}\n              max={2}\n              step={stepSize}\n              onChange={handleInputChange} style={{ width: 50 }} />\n          </Box>\n\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>Metalness</Typography>\n            <input\n              value={values?.metalness ?? 0}\n              type=\"number\"\n              data-key='metalness'\n              min={0}\n              max={1}\n              step={0.01}\n              onChange={handleInputChange} style={{ width: 50 }} />\n          </Box>\n\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>Roughness</Typography>\n            <input\n              value={values?.roughness ?? 0}\n              type=\"number\"\n              data-key='roughness'\n              min={0}\n              max={1}\n              step={0.01}\n              onChange={handleInputChange} style={{ width: 50 }} />\n          </Box>\n\n          <Divider />\n\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>Displacement Scale</Typography>\n            <input\n              value={values?.displacementScale ?? 0}\n              disabled={values?.displacementMap === ''}\n              type=\"number\"\n              data-key='displacementScale'\n              min={0}\n              max={1}\n              step={0.01}\n              onChange={handleInputChange} style={{ width: 50 }} />\n          </Box>\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>Displacement Bias</Typography>\n            <input\n              value={values?.displacementBias ?? 0}\n              disabled={values?.displacementMap === ''}\n              type=\"number\"\n              data-key='displacementBias'\n              min={0}\n              max={1}\n              step={0.01}\n              onChange={handleInputChange} style={{ width: 50 }} />\n          </Box>\n\n          <Divider />\n\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>EnvMap Intensity</Typography>\n            <input\n              value={values?.envMapIntensity ?? 0}\n              type=\"number\"\n              data-key='envMapIntensity'\n              min={0}\n              max={1}\n              step={0.1}\n              onChange={handleInputChange} style={{ width: 50 }} />\n          </Box>\n\n          <Divider />\n\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>Ambient occlusion intensity &nbsp;</Typography>\n            <input\n              value={values?.aoMapIntensity ?? 0}\n              type=\"number\"\n              data-key='aoMapIntensity'\n              min={0}\n              max={1}\n              step={0.1}\n              onChange={handleInputChange} style={{ width: 50 }} />\n          </Box>\n\n          <Divider />\n\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>Color</Typography>\n            <input\n              value={values?.color ?? 0}\n              type=\"color\"\n              data-key='color'\n              min={0}\n              max={1}\n              step={0.1}\n              onChange={handleInputChange} style={{ width: 50 }} />\n          </Box>\n\n          <Divider />\n\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>Emissive Intensity</Typography>\n            <input\n              value={values?.emissiveIntensity ?? 0}\n              type=\"number\"\n              data-key='emissiveIntensity'\n              min={0}\n              max={1}\n              step={0.1}\n              onChange={handleInputChange} style={{ width: 50 }} />\n          </Box>\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>Emissive color</Typography>\n            <input\n              value={values?.emissive ?? 0}\n              type=\"color\"\n              data-key='emissive'\n              min={0}\n              max={1}\n              step={0.1}\n              onChange={handleInputChange} style={{ width: 50 }} />\n          </Box>\n\n          <Divider />\n\n          <Box display='flex' mt={1} mb={1} alignItems='center'>\n            <Typography>Wireframe</Typography>\n            <Switch\n              inputProps={{\n                'data-key': 'wireframe'\n              }}\n              checked={!!values?.wireframe}\n              onChange={handleControlChange}\n              color='primary'\n            />\n          </Box>\n\n          <Divider />\n\n          <Box display='flex' mt={1} mb={1} alignItems='center'>\n            <Typography>Transparent</Typography>\n            <Switch\n              inputProps={{\n                'data-key': 'transparent'\n              }}\n              checked={!!values?.transparent}\n              onChange={handleControlChange}\n              color='primary'\n            />\n          </Box>\n          <Box display='flex' mt={1} mb={1} justifyContent='space-between'>\n            <Typography>Opacity</Typography>\n            <input\n              value={values?.opacity ?? 0}\n              disabled={!values?.transparent}\n              type=\"number\"\n              data-key='opacity'\n              min={0}\n              max={1}\n              step={0.05}\n              onChange={handleInputChange} style={{ width: 50 }} />\n          </Box>\n\n\n        </Box>\n      </Paper>\n    </>\n  )\n}\n\nexport default MaterialSelector","import {Paper} from \"@material-ui/core\"\nimport React from \"react\"\nimport styled from 'styled-components';\nimport DracoSelector from \"../components/DracoSelector\"\nimport MaterialSelector from \"../components/MaterialSelector\"\nimport MeshSelector from \"../components/MeshSelector\"\nimport NodeSelector from \"../components/NodeSelector\"\nimport ProductSelector from \"../components/ProductSelector\"\nimport Viewer3D from \"../components/Viewer3D\"\nimport MaterialSettings from \"../components/MaterialSettings/MaterialSettings\"\n\nexport default function Home() {\n  return (\n    <>\n      <StyledPaper>\n        <DracoSelector />\n        <ProductSelector />\n        <NodeSelector />\n        <MeshSelector />\n      </StyledPaper>\n      <MaterialSettingHolder>\n        <MaterialSettings />\n      </MaterialSettingHolder>\n      <MaterialSelectHolder>\n        <MaterialSelector />\n      </MaterialSelectHolder>\n      <Viewer3D />\n    </>\n  )\n}\n\nconst StyledPaper = styled(Paper)`\n    padding: 0.5em;\n    position: absolute;\n    top: 1em;\n    left: 1em;\n    z-index: 1;\n    width: min-content;\n`\n\nconst MaterialSettingHolder = styled.div`\n  padding: 1em;\n    position: absolute;\n    top: 1em;\n    right: 2em;\n    z-index: 1;\n`\n\nconst MaterialSelectHolder = styled.div`\n    padding: 0.5em;\n    position: absolute;\n    bottom: 1em;\n    left: 1em;\n    z-index: 1;\n`","import React from \"react\"\nimport {Provider} from \"react-redux\"\nimport {Route, Switch} from \"react-router\"\nimport {BrowserRouter} from \"react-router-dom\"\nimport {PersistGate} from \"redux-persist/integration/react\"\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\"\nimport appTheme from \"./theme\"\nimport {persistor, store} from \"./redux/Store\"\nimport {ROUTE_HOMEPAGE} from \"./constants\"\nimport Home from \"./pages/Home\"\n\nconst App = () => {\n  return (\n    <>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <ThemeProvider theme={appTheme}>\n            <BrowserRouter>\n              <Switch>\n                <Route exact path={ROUTE_HOMEPAGE} component={Home} />\n              </Switch>\n            </BrowserRouter>\n          </ThemeProvider>\n        </PersistGate>\n      </Provider>\n    </>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root-app\")\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1j2Bs\",\"spinner\":\"Loader_spinner__1oBcK\",\"rotate\":\"Loader_rotate__2CUi0\",\"path\":\"Loader_path__1uan3\",\"dash\":\"Loader_dash__1rUgj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasContainer\":\"Viewer3D_canvasContainer__3Jkt_\"};"],"sourceRoot":""}